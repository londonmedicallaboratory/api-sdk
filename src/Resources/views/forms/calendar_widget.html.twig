{% block lml_sdk_calender_widget %}
    <div class="lml-calendar-widget"
            {{ stimulus_controller('@londonmedicallaboratory/api-sdk/calendar', {
                calendarUrl: form.vars.calendar_url,
                dailySlotsUrl: form.vars.daily_slots_url,
                formElementId: form.vars.id
            }) }}>

        <span {{ stimulus_target('@londonmedicallaboratory/api-sdk/calendar', 'prettyTime') }}>
            {{ form.vars.pretty_time }}
        </span>

        <button {{ stimulus_action('@londonmedicallaboratory/api-sdk/calendar', 'selectDate') }} type="button">
            {{ form.vars.pretty_time ? 'Change' : 'Set' }}
        </button>

        {# These are needed for flapickr; it has a "feature" that always updates the widget as soon as it is instanced #}
        <div style="display: none">
            {{ form_widget(form) }}
            <input type="text" {{ stimulus_target('@londonmedicallaboratory/api-sdk/calendar', 'altTime') }} value="{{ form.vars.formatted_time }}">
        </div>

        <dialog {{ stimulus_target('@londonmedicallaboratory/api-sdk/calendar', 'dialog') }} open class="container" style="visibility: hidden">
            <span class="close" {{ stimulus_action('@londonmedicallaboratory/api-sdk/calendar', 'close', 'click') }}>X</span>
            <div class="row">
                <div class="col-8" {{ stimulus_target('@londonmedicallaboratory/api-sdk/calendar', 'calendar') }}>
                </div>

                <div class="col-4 " {{ stimulus_target('@londonmedicallaboratory/api-sdk/calendar', 'slots') }}>
                    {# Keep these if more params are needed; easier to generate them in JS
                    <div class="slots">
                        {% for i in range(1, 30) %}
                            <span class="slot not-available" {{ stimulus_action('@londonmedicallaboratory/api-sdk/calendar', 'selectSlot', 'click', {time: '09:00', available: false, human_readable_format: 'asd'}) }}>{{ i }}</span>
                        {% endfor %}
                    </div>
                    #}
                </div>
            </div>
        </dialog>
    </div>
{% endblock %}
